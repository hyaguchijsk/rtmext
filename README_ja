RTMEXTender

(c) 2011 矢口 裕明, JSK

* 概要

本プロジェクトはOpenRTMのためのコマンドラインツールの提供を目的としています．
ツール群はROSから着想を得ています．

Linuxを対象とし，Ubuntu 10.04 Lucidで動作確認をしています．

* 必要な環境変数

(bash,zsh)
export PATH=${PATH}:/path/to/rtmext
export RTM_PACKAGE_PATH=/usr/local/src/OpenRTM/OpenRTM-aist-1.0.0/examples:/path/to/private/rtm/comps

(csh,tcsh)
setenv PATH ${PATH}:/path/to/rtmext
setenv RTM_PACKAGE_PATH /usr/local/src/OpenRTM/OpenRTM-aist-1.0.0/examples:/path/to/private/rtm/comps

* コマンド

- rtmpack [op] [pack]
-- rtmpack find [pack]
   パッケージの存在する場所を探します．
-- rtmpack depend [pack]
   パッケージの依存関係を解決します．

- rtmmake (--clean) (--nochain) [pack]
  依存する全パッケージに対し順次makeを実行します．

- rtmlaunch (pack) [launcher_xml]
  xmlに記述された実行，ポート接続，アクティベートを実行します．
  defaultstateを記述することで、一部のコンポーネントをdeactivate
　状態にしておいたり、activation_intervalにmsで待ち時間を記述する
　ことで、アクティベーションのタイミングを調節することができます．
  また、componentタグの中でconfigurationの名前と値をxml中に記述
  しておくことで、起動時にそれらをセットしておくことができます．
  更に、<terminal-invoke type="tabs"/>のようにタグの内側で記述
  しておくと、一つ一つのコンポーネントが一つのタブに対応した
　gnome-terminalとして起動します。この記述がなければ、rtmlaunch
  を立ち上げたターミナルの中で 動きます。

  また、コンポーネントそのものでなくても、一緒に起動したい関連
  スクリプトに関しては、
  <process package="example" proc="test.l" delaytime="10" />
  のように記述することで、起動時の遅れ時間を指定して起動する
　ことができる。この時、拡張子が.lのものは、euslispのファイルと
　して扱われる。EusLispのどのバイナリを起動に使うかは、環境変数
　EUSに文字列をセットすることで指定できる。.bashの場合は、.bashrcに
　export EUS='irteusgl' 
　のようにすればよい。この環境変数がない場合には、デフォルトの
　irteusglが使われる。

* 依存関係について

パッケージ間の依存関係を解決するため，
manifest.xmlをパッケージディレクトリに追加してください．
ファイルの書式はROSと互換性があり，
<depend package="dependency" />
のように依存するパッケージを記述してください．

例
<package>
  <description brief="brief">
    description of package
  </description>
  <author>Alan Smithee</author>
  <license>Public Domain</license>
  <depend package="dependency" />
</package>


* rtmcd

rtmcd(roscdと同等)を使用するためには，
rcファイルに以下の関数もしくはエイリアスを追加してください．

(bash,zsh)
function rtmcd () {
    cd `rtmpack find $1`
}

(csh,tcsh)
alias rtmcd 'cd `rtmpack find \!^`'

